<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="491.6667px" preserveAspectRatio="none" style="width:1168px;height:491px;background:#333333;" version="1.1" viewBox="0 0 1168 491" width="1168.75px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="564.5833" x="294.7917" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="541.6667" x="306.25" y="30.5583">com.telenav.kivakit.data.compression.codecs.huffman</text><!--MD5=[af4063f8b666854de88383954281b285]
cluster FastHuffmanDecoder.Table--><polygon fill="#333333" points="308.3333,277.1403,495.8333,277.1403,503.125,304.362,507.2917,304.362,507.2917,434.432,308.3333,434.432,308.3333,277.1403" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="308.3333" x2="503.125" y1="304.362" y2="304.362"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="175" x="315.625" y="294.4336">FastHuffmanDecoder.Table</text><!--MD5=[b8fe5ed5f9c35b908904ec3d3ad10e60]
class FastHuffmanDecoder.Table.Entry--><rect codeLine="10" fill="#282828" height="83.3781" id="FastHuffmanDecoder.Table.Entry" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="326.0986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="326.0986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="349.1536"/><rect codeLine="10" fill="none" height="83.3781" id="FastHuffmanDecoder.Table.Entry" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="326.0986"/><ellipse cx="367.7083" cy="341.7928" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M369.6187,346.2179 Q369.1915,346.4376 368.7215,346.5474 Q368.2515,346.6573 367.7327,346.6573 Q365.8895,346.6573 364.919,345.4427 Q363.9486,344.2281 363.9486,341.9332 Q363.9486,339.6322 364.919,338.4176 Q365.8895,337.203 367.7327,337.203 Q368.2515,337.203 368.7276,337.3128 Q369.2037,337.4227 369.6187,337.6424 L369.6187,339.6444 Q369.1549,339.2171 368.7185,339.0188 Q368.2821,338.8204 367.8182,338.8204 Q366.8294,338.8204 366.3259,339.6047 Q365.8223,340.389 365.8223,341.9332 Q365.8223,343.4713 366.3259,344.2556 Q366.8294,345.0399 367.8182,345.0399 Q368.2821,345.0399 368.7185,344.8415 Q369.1549,344.6431 369.6187,344.2159 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="33.3333" x="384.375" y="346.5169">Entry</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="429.1667" y="322.9736"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="433.3333" y="339.2253">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="354.1667" x2="481.25" y1="357.487" y2="357.487"/><polygon fill="#FFFF44" points="364.5833,387.6485,368.75,391.8152,364.5833,395.9819,360.4167,391.8152" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="376.0417" y="399.7681">Entry()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="354.1667" x2="373.9583" y1="375.6927" y2="375.6927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="377.0833" y="379.5024">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="461.4583" x2="481.25" y1="375.6927" y2="375.6927"/><!--MD5=[f39ad9880bdb1ab85099c19a5add36ec]
class AsString--><rect codeLine="6" fill="#282828" height="48.055" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="98.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="98.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="121.5495"/><rect codeLine="6" fill="none" height="48.055" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="98.4945"/><ellipse cx="249.4792" cy="114.1886" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M246.3623,111.3505 L246.3623,109.7636 L251.7883,109.7636 L251.7883,111.3505 L249.9756,111.3505 L249.9756,117.2892 L251.7883,117.2892 L251.7883,118.8761 L246.3623,118.8761 L246.3623,117.2892 L248.175,117.2892 L248.175,111.3505 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="55.2083" x="266.1458" y="118.9128">AsString</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="235.9375" x2="326.5625" y1="129.8828" y2="129.8828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="235.9375" x2="326.5625" y1="138.2161" y2="138.2161"/><!--MD5=[19bab21d94a99911073f24de8dec88db]
class Codec--><rect codeLine="7" fill="#282828" height="48.055" id="Codec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="98.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="98.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="121.5495"/><rect codeLine="7" fill="none" height="48.055" id="Codec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="98.4945"/><ellipse cx="710.4167" cy="114.1886" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M707.2998,111.3505 L707.2998,109.7636 L712.7258,109.7636 L712.7258,111.3505 L710.9131,111.3505 L710.9131,117.2892 L712.7258,117.2892 L712.7258,118.8761 L707.2998,118.8761 L707.2998,117.2892 L709.1125,117.2892 L709.1125,111.3505 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="727.0833" y="118.9128">Codec</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="696.875" x2="771.875" y1="129.8828" y2="129.8828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="696.875" x2="771.875" y1="138.2161" y2="138.2161"/><!--MD5=[c407b488d7ef18e93988e03ee4970a88]
class FastHuffmanDecoder--><rect codeLine="16" fill="#282828" height="131.2012" id="FastHuffmanDecoder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="79.8828"/><rect codeLine="16" fill="none" height="131.2012" id="FastHuffmanDecoder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><ellipse cx="878.6458" cy="72.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M880.5562,76.947 Q880.129,77.1667 879.659,77.2766 Q879.189,77.3865 878.6702,77.3865 Q876.827,77.3865 875.8565,76.1719 Q874.8861,74.9573 874.8861,72.6624 Q874.8861,70.3613 875.8565,69.1467 Q876.827,67.9321 878.6702,67.9321 Q879.189,67.9321 879.6651,68.042 Q880.1412,68.1519 880.5562,68.3716 L880.5562,70.3735 Q880.0924,69.9463 879.656,69.7479 Q879.2196,69.5496 878.7557,69.5496 Q877.7669,69.5496 877.2634,70.3339 Q876.7598,71.1182 876.7598,72.6624 Q876.7598,74.2004 877.2634,74.9847 Q877.7669,75.769 878.7557,75.769 Q879.2196,75.769 879.656,75.5707 Q880.0924,75.3723 880.5562,74.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="136.4583" x="901.5625" y="77.2461">FastHuffmanDecoder</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="1104.1667" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="1108.3333" y="69.9544">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="810.4167" x2="1156.25" y1="88.2161" y2="88.2161"/><polygon fill="#FFFF44" points="820.8333,118.3777,825,122.5444,820.8333,126.711,816.6667,122.5444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="832.2917" y="130.4972">FastHuffmanDecoder()</text><ellipse cx="820.8333" cy="143.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="832.2917" y="150.2421">FastHuffmanDecoder(HuffmanCodec&lt;Symbol&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="810.4167" x2="939.5833" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="942.7083" y="110.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1027.0833" x2="1156.25" y1="106.4219" y2="106.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="810.4167" x2="1156.25" y1="159.9508" y2="159.9508"/><ellipse cx="820.8333" cy="171.4091" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="315.625" x="832.2917" y="178.3203">void decode(ByteList input, SymbolConsumer&lt;Symbol&gt;)</text><!--MD5=[0694993cfa3ff74ed48baeb4633f0f47]
class HuffmanCodec--><rect codeLine="26" fill="#282828" height="234.0922" id="HuffmanCodec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="250.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="250.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="273.6328"/><rect codeLine="26" fill="none" height="234.0922" id="HuffmanCodec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="250.5778"/><ellipse cx="650" cy="266.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M651.9104,270.697 Q651.4832,270.9167 651.0132,271.0266 Q650.5432,271.1365 650.0244,271.1365 Q648.1812,271.1365 647.2107,269.9219 Q646.2402,268.7073 646.2402,266.4124 Q646.2402,264.1113 647.2107,262.8967 Q648.1812,261.6821 650.0244,261.6821 Q650.5432,261.6821 651.0193,261.792 Q651.4954,261.9019 651.9104,262.1216 L651.9104,264.1235 Q651.4465,263.6963 651.0101,263.4979 Q650.5737,263.2996 650.1099,263.2996 Q649.1211,263.2996 648.6176,264.0839 Q648.114,264.8682 648.114,266.4124 Q648.114,267.9504 648.6176,268.7347 Q649.1211,269.519 650.1099,269.519 Q650.5737,269.519 651.0101,269.3207 Q651.4465,269.1223 651.9104,268.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="672.9167" y="270.9961">HuffmanCodec</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="883.3333" y="247.4528"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="887.5" y="263.7044">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="533.3333" x2="935.4167" y1="281.9661" y2="281.9661"/><polygon fill="#FFFF44" points="543.75,312.1277,547.9167,316.2944,543.75,320.461,539.5833,316.2944" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="555.2083" y="324.2472">HuffmanCodec()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="690.625" y1="300.1719" y2="300.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="693.75" y="303.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="778.125" x2="935.4167" y1="300.1719" y2="300.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="935.4167" y1="333.9559" y2="333.9559"/><ellipse cx="543.75" cy="345.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="555.2083" y="352.3254">Code code(Symbol value)</text><ellipse cx="543.75" cy="365.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="555.2083" y="372.0703">Set&lt;CodedSymbol&lt;Symbol&gt;&gt; codedSymbols()</text><ellipse cx="543.75" cy="384.904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="240.625" x="555.2083" y="391.8152">CodedSymbol&lt;Symbol&gt; decode(BitReader)</text><ellipse cx="543.75" cy="404.6488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="555.2083" y="411.5601">CodedSymbol&lt;Symbol&gt; escape()</text><ellipse cx="543.75" cy="424.3937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="371.875" x="555.2083" y="431.3049">HuffmanCodec&lt;Symbol&gt; from(Symbols&lt;Symbol&gt;, Maximum bits)</text><ellipse cx="543.75" cy="468.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="555.2083" y="474.9613">PropertyMap asProperties(StringConverter&lt;Symbol&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="700" y1="450.886" y2="450.886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="703.125" y="454.6956">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="768.75" x2="935.4167" y1="450.886" y2="450.886"/><!--MD5=[464856e56007ed2ccda2d036de719e08]
class FastHuffmanDecoder.Table--><rect codeLine="41" fill="#282828" height="83.3781" id="FastHuffmanDecoder.Table" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="326.0986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="326.0986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="349.1536"/><rect codeLine="41" fill="none" height="83.3781" id="FastHuffmanDecoder.Table" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="326.0986"/><ellipse cx="23.9583" cy="341.7928" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M25.8687,346.2179 Q25.4415,346.4376 24.9715,346.5474 Q24.5015,346.6573 23.9827,346.6573 Q22.1395,346.6573 21.169,345.4427 Q20.1986,344.2281 20.1986,341.9332 Q20.1986,339.6322 21.169,338.4176 Q22.1395,337.203 23.9827,337.203 Q24.5015,337.203 24.9776,337.3128 Q25.4537,337.4227 25.8687,337.6424 L25.8687,339.6444 Q25.4049,339.2171 24.9685,339.0188 Q24.5321,338.8204 24.0682,338.8204 Q23.0794,338.8204 22.5759,339.6047 Q22.0723,340.389 22.0723,341.9332 Q22.0723,343.4713 22.5759,344.2556 Q23.0794,345.0399 24.0682,345.0399 Q24.5321,345.0399 24.9685,344.8415 Q25.4049,344.6431 25.8687,344.2159 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="175" x="40.625" y="346.5169">FastHuffmanDecoder.Table</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="227.0833" y="322.9736"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="231.25" y="339.2253">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="279.1667" y1="357.487" y2="357.487"/><polygon fill="#FFFF44" points="20.8333,387.6485,25,391.8152,20.8333,395.9819,16.6667,391.8152" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="32.2917" y="399.7681">Table()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="101.0417" y1="375.6927" y2="375.6927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="104.1667" y="379.5024">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="188.5417" x2="279.1667" y1="375.6927" y2="375.6927"/><!--MD5=[91ef93040cdb1008351ff07bce4271a9]
reverse link AsString to FastHuffmanDecoder.Table.Entry--><path codeLine="9" d="M304.625,165.1507 C329.8229,210.0778 369.6979,281.1403 394.7396,325.7861 " fill="none" id="AsString-backto-FastHuffmanDecoder.Table.Entry" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="298.1667,168.557,294.3333,146.8174,310.8854,161.4215,298.1667,168.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[81743108a6ea9cbce914b8abe114774a]
reverse link Codec to HuffmanCodec--><path codeLine="25" d="M734.375,167.734 C734.375,191.0778 734.375,220.9215 734.375,250.3486 " fill="none" id="Codec-backto-HuffmanCodec" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="727.0833,167.6507,734.375,146.8174,741.6667,167.6507,727.0833,167.6507" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[91f22efd2d7d78973f4817267899e35b]
reverse link AsString to FastHuffmanDecoder.Table--><path codeLine="40" d="M257.875,165.1507 C232.6771,210.0778 192.8021,281.1403 167.7604,325.7861 " fill="none" id="AsString-backto-FastHuffmanDecoder.Table" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="251.6146,161.4215,268.1667,146.8174,264.3333,168.557,251.6146,161.4215" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4519c90ed1dead38f185d0cefc55631c]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.kivakit.data.compression.codecs.huffman"
    
    interface AsString
    interface Codec
    
    AsString <|- - FastHuffmanDecoder.Table.Entry
    class FastHuffmanDecoder.Table.Entry<Symbol>
    {
        - -(constructors)- -
        #Entry()
    }
    
    class FastHuffmanDecoder<Symbol>
    {
        - -(constructors)- -
        #FastHuffmanDecoder()
        +FastHuffmanDecoder(HuffmanCodec<Symbol>)
        - -
        +void decode(ByteList input, SymbolConsumer<Symbol>)
    }
    
    Codec <|- - HuffmanCodec
    class HuffmanCodec<Symbol>
    {
        - -(constructors)- -
        #HuffmanCodec()
        - -
        +Code code(Symbol value)
        +Set<CodedSymbol<Symbol>> codedSymbols()
        +CodedSymbol<Symbol> decode(BitReader)
        +CodedSymbol<Symbol> escape()
        +HuffmanCodec<Symbol> from(Symbols<Symbol>, Maximum bits)
        - -(collection)- -
        +PropertyMap asProperties(StringConverter<Symbol>)
    }
    
    AsString <|- - FastHuffmanDecoder.Table
    class FastHuffmanDecoder.Table<Symbol>
    {
        - -(constructors)- -
        #Table()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.data.compression.codecs.huffman"
    
    interface AsString
    interface Codec
    
    AsString <|- - FastHuffmanDecoder.Table.Entry
    class FastHuffmanDecoder.Table.Entry<Symbol>
    {
        - -(constructors)- -
        #Entry()
    }
    
    class FastHuffmanDecoder<Symbol>
    {
        - -(constructors)- -
        #FastHuffmanDecoder()
        +FastHuffmanDecoder(HuffmanCodec<Symbol>)
        - -
        +void decode(ByteList input, SymbolConsumer<Symbol>)
    }
    
    Codec <|- - HuffmanCodec
    class HuffmanCodec<Symbol>
    {
        - -(constructors)- -
        #HuffmanCodec()
        - -
        +Code code(Symbol value)
        +Set<CodedSymbol<Symbol>> codedSymbols()
        +CodedSymbol<Symbol> decode(BitReader)
        +CodedSymbol<Symbol> escape()
        +HuffmanCodec<Symbol> from(Symbols<Symbol>, Maximum bits)
        - -(collection)- -
        +PropertyMap asProperties(StringConverter<Symbol>)
    }
    
    AsString <|- - FastHuffmanDecoder.Table
    class FastHuffmanDecoder.Table<Symbol>
    {
        - -(constructors)- -
        #Table()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>